! function() {
    const e = document,
        t = e.documentElement,
        n = e.body,
        i = e.getElementById("lights-toggle"),
        s = window.sr = ScrollReveal();

    function a() {
        let e = i.parentNode.querySelector(".label-text");
        i.checked ? (n.classList.remove("lights-off"), e && (e.innerHTML = "noite")) : (n.classList.add("lights-off"), e && (e.innerHTML = "dia"));

    }
    t.classList.remove("no-js"), t.classList.add("js"), window.addEventListener("load", function() { n.classList.add("is-loaded") }), n.classList.contains("has-animations") && window.addEventListener("load", function() {
        s.reveal(".feature", { duration: 600, distance: "20px", easing: "cubic-bezier(0.215, 0.61, 0.355, 1)", origin: "right", viewFactor: .2 })
    }), i && (window.addEventListener("load", a), i.addEventListener("change", a))

}();


/* Typewriter */

var TxtRotate = function(el, toRotate, period) {
    this.toRotate = toRotate;
    this.el = el;
    this.loopNum = 0;
    this.period = parseInt(period, 10) || 2000;
    this.txt = '';
    this.tick();
    this.isDeleting = false;
};

TxtRotate.prototype.tick = function() {
    var i = this.loopNum % this.toRotate.length;
    var fullTxt = this.toRotate[i];

    if (this.isDeleting) {
        this.txt = fullTxt.substring(0, this.txt.length - 1);
    } else {
        this.txt = fullTxt.substring(0, this.txt.length + 1);
    }

    this.el.innerHTML = '<span class="wrap">' + this.txt + '</span>';

    var that = this;
    var delta = 300 - Math.random() * 200;

    if (this.isDeleting) { delta /= 2; }

    if (!this.isDeleting && this.txt === fullTxt) {
        delta = this.period;
        this.isDeleting = true;
    } else if (this.isDeleting && this.txt === '') {
        this.isDeleting = false;
        this.loopNum++;
        delta = 500;
    }

    setTimeout(function() {
        that.tick();
    }, delta);
};

window.onload = function() {
    var elements = document.getElementsByClassName('txt-rotate');
    for (var i = 0; i < elements.length; i++) {
        var toRotate = elements[i].getAttribute('data-rotate');
        var period = elements[i].getAttribute('data-period');
        if (toRotate) {
            new TxtRotate(elements[i], JSON.parse(toRotate), period);
        }
    }

    // INJECT CSS

    var css = document.createElement("style");
    css.type = "text/css";
    css.innerHTML = ".txt-rotate > .wrap { border-right: 0.08em solid #666 }";
    document.body.appendChild(css);
};

/* Accordeon FAQ */

var elementOld = null;
var openClass = "Accordion-tab--open";

function toggleAccordion(element) {
    content = element.querySelector(".Accordion-tab-content");

    if (elementOld != null) {
        elementOld.classList.remove(openClass);
        contentOld = elementOld.querySelector(".Accordion-tab-content");
        contentOld.style.maxHeight = "0px";
    }

    if (elementOld !== element) {
        element.classList.add(openClass);
        content.style.maxHeight = content.scrollHeight + "px";
        elementOld = element;
    } else {
        elementOld = null;
    }
};
